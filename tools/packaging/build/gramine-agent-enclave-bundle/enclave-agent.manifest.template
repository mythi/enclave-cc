loader.preload = "file:{{ gramine.libos }}" # for compatibility with v1.0

loader.entrypoint = "file:{{ gramine.libos }}"
libos.entrypoint = "/enclave-agent"
loader.log_level = "{{ log_level }}"
loader.argv0_override = "enclave-agent"
loader.argv = ["enclave-agent", "-c", "/etc/decrypt_config.conf", "-l", "tcp://127.0.0.1:7788"]
 
loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}:/usr{{ arch_libdir }}"

fs.mounts = [
 { path = "/lib", uri = "file:{{ gramine.runtimedir() }}" },
 { path = "{{ arch_libdir }}", uri = "file:{{ arch_libdir }}" },
 { path = "/usr{{ arch_libdir }}", uri = "file:/usr{{ arch_libdir }}" },
 { path = "/etc", uri = "file:/etc" },
 { path = "/var", uri = "file:/var" },
 { path = "/usr/lib/ssl", uri = "file:/usr/lib/ssl" },
 { path = "/lib/x86_64-linux-gnu", uri = "file:/lib/x86_64-linux-gnu" },
 { type = "tmpfs", path = "/tmp" },
 { type = "encrypted", path = "/enc", uri = "file:enc", key_name = "_sgx_mrsigner" },
 { type = "encrypted", path = "/run/enclave-cc/containers", uri = "file:/run/enclave-cc/containers", key_name = "_sgx_mrsigner" },
]

sgx.remote_attestation = "dcap"

loader.pal_internal_mem_size = "1024M"
sgx.enclave_size = "4096M"

sys.stack.size = "1024M"
sgx.max_threads = 32

sgx.debug = true
sgx.nonpie_binary = true
sys.insecure__allow_eventfd = true 

sgx.trusted_files = [
  "file:{{ gramine.libos }}/",
  "file:enclave-agent",
  "file:/lib/x86_64-linux-gnu/libgcc_s.so.1",
  "file:{{ gramine.runtimedir() }}/",
  "file:/usr/lib/ssl/certs/ca-certificates.crt",
]

sgx.allowed_files = [
  "file:/etc/decrypt_config.conf",
  "file:/etc/ocicrypt.conf",
  "file:/etc/resolv.conf",
  "file:/etc/ocicrypt_keyprovider_native.conf",
]
